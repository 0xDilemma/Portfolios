<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbox_minicart.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>